# shellcheck shell=bash

stty erase ^?                                                                                       # make backspace delete a char 
stty sane

bind 'set completion-ignore-case on'                                                                # tab-autocomplete case-insensitive
bind 'set show-all-if-ambiguous on'
bind 'set match-hidden-files off'
bind 'set visible-stats on'
bind 'set completion-query-items 150'

#BASH VARIABLES
export EDITOR='gvim'                                                                                # gvim as default editor
export HISTCONTROL=ignoredups:ignorespace                                                           # avoid succesive duplicates in the bash command history
export HISTFILE=~/.bash_history
export HISTFILESIZE=5000
export HISTIGNORE="ls:[bf]g:exit:pwd:clear:cd ..:cd .:s:g:exit:tmux:cat:ll:set:shopt:#set :shopt -s:"
export HISTSIZE=-1
export CDPATH="~:~/Documents:~/GIT"
export PATH=".:${PATH}"
export GLOBINORE=
export FIGNORE=".swp:~:.org"
export IGNOREEOF=1                                                                                  # prevent accidental exit with Ctrl-D


function __prompt_command() {
    shopt -s promptvars                                                                             # prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded
#Colors !
        local red="\[\033[1;31m\]"
        local green="\[\033[0;92m\]"
        local yellow="\[\033[0;33m\]"
        local blue="\[\033[1;34m\]"
        local magenta="\[\033[0;35m\]"
        local cyan="\[\033[0;36m\]"
        local white="\[\033[0;37m\]"
        local colorOff="\[\033[0m\]" 
        EXIT="$?"                                                                                   # exit status of last command
        PS1=""
#debian chroot stuff (take it or leave it)
        PS1+="${debian_chroot:+($debian_chroot)}"
#based on return status either display Red/Green username
        if [ $EXIT -eq 0 ]; then
            PS1+="$green\h$colorOff"
        else
            PS1+="$red\h$colorOff"
        fi
#Display working Dir
                PS1+="$magenta:\w$colorOff"
# prompt $ or # for root
                PS1+="\$ "
}
PROMPT_COMMAND="history -a ; __prompt_command "

export PS2='>'
export PS4='+$BASH_SOURCE:$LINENO:$FUNCNAME: '
#BIND KEYS
bind     '"^[[1;5D" backward-word'
bind     '"^[[1;5C" forward-word'
bind     '"\e[1~"   beginning-of-line'                                                              # Home
bind     '"\e[7~"   beginning-of-line'                                                              # Home rxvt
bind     '"\e[2~"   overwrite-mode'                                                                 # Ins
bind     '"\e[3~"   delete-char'                                                                    # Delete
bind     '"\e[4~"   end-of-line'                                                                    # End
bind     '"\e[8~"   end-of-line'                                                                    # End rxvt
#bind     '"^[p~": history-search-backward`'                                                          # TCSH equivalent history search
bind     '"\e[A": history-search-backward'
bind     '"\e[B": history-search-forward'
bind     '"\M-s": menu-complete'
bind     space:magic-space

#ALIASES
# shellcheck source=$HOME                                                                           # disable relative paths
# shell check disable=SC2088                                                                        # disable check for home

#if   !  grep -q '.bash_aliases' "${HOME}"/.bashrc  ; then
#    . ~/.bash_aliases
#fi


#### SHELL BUILTIN
# set
# set -o allexport      # set -a
set -o notify           # set -b                                                                    # Cause the status of terminated background jobs to be reported immediately
set -o histexpand       # set -H                                                                    # History substitution using !
set -o noclobber        # set -C                                                                     # Prevent output redirection using from overwriting existing files.  
#set -o noexec          # set -n                                                                    #Read commands but do not execute them
set -o monitor          # set -m                                                                    # All processes run in a separate process group
set -o history
#set -o nounset          # set -u
#set -o verbose         # set -v
#set -o xtrace          # set -x
#set -o braceexpand     # set -B
#set -o errexit         # set -e
#set -o errtrace        # set -E
#set -o functrace       # set -T
#set -o vi

#SHELL OPTS                                                                                         # Read bash man
shopt -s autocd
shopt -s cdable_vars
shopt -s cdspell
shopt -s checkjobs
shopt -s checkwinsize
shopt -s cmdhist
shopt -s direxpand
shopt -s dirspell
shopt -s dotglob
shopt -s expand_aliases
shopt -s extglob
shopt -s extquote
shopt -s histappend
shopt -s interactive_comments
shopt -s nocaseglob
shopt -s nocasematch
shopt -s globstar
shopt -s no_empty_cmd_completion
shopt -s sourcepath
shopt -s complete_fullquote

